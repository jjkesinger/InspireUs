// <auto-generated />
using System;
using InspireUs.Congress.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InspireUs.Congress.Infrastructure.Migrations
{
    [DbContext(typeof(CongressDbContext))]
    [Migration("20221127001211_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InspireUs.Congress.Domain.Model.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Party")
                        .HasColumnType("int");

                    b.Property<int?>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("InspireUs.Congress.Domain.Model.Member", b =>
                {
                    b.OwnsOne("InspireUs.Congress.Domain.Model.Address", "Address", b1 =>
                        {
                            b1.Property<int>("MemberId")
                                .HasColumnType("int");

                            b1.Property<string>("Address1")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Address1");

                            b1.Property<string>("Address2")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Address2");

                            b1.Property<string>("City")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("AddressCity");

                            b1.Property<int?>("State")
                                .HasPrecision(1)
                                .HasColumnType("int")
                                .HasColumnName("AddressState");

                            b1.Property<string>("ZipCode")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("AddressZipCode");

                            b1.HasKey("MemberId");

                            b1.ToTable("Member");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");
                        });

                    b.OwnsOne("InspireUs.Congress.Domain.Model.District", "District", b1 =>
                        {
                            b1.Property<int>("MemberId")
                                .HasColumnType("int");

                            b1.Property<int?>("DistrictNumber")
                                .HasPrecision(1)
                                .HasColumnType("int")
                                .HasColumnName("DistrictRepresented");

                            b1.Property<int>("State")
                                .HasPrecision(1)
                                .HasColumnType("int")
                                .HasColumnName("StateRepresented");

                            b1.HasKey("MemberId");

                            b1.ToTable("Member");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");
                        });

                    b.OwnsMany("InspireUs.Congress.Domain.Model.ServiceTime", "ServiceHistory", b1 =>
                        {
                            b1.Property<int>("MemberId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int?>("EndYear")
                                .HasColumnType("int");

                            b1.Property<int>("MemberType")
                                .HasColumnType("int");

                            b1.Property<int>("StartYear")
                                .HasColumnType("int");

                            b1.HasKey("MemberId", "Id");

                            b1.ToTable("ServiceTime");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("District")
                        .IsRequired();

                    b.Navigation("ServiceHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
